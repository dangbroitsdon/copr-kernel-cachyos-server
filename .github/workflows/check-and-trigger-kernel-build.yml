name: Check and Trigger Kernel Build (COPR)

on:
  schedule:
      - cron: '0 20 * * *'
  workflow_dispatch:

jobs:
  check-for-update:
    runs-on: ubuntu-latest

    outputs:
      _match: ${{ steps.compare_kvers.outputs._match }}

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Get Latest Kernel Version
        id: get_latest_kver
        run: |
          _kernel_tags=($(git -c 'versionsort.suffix=-' \
            ls-remote --exit-code --refs --sort='version:refname' --tags https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux '*.*' \
            | cut --delimiter='/' --fields=3))
          for (( i=1; i<${#_kernel_tags[@]}; i++ )); do
            if [[ "${_kernel_tags[-i]}" != *rc* ]]; then
              echo "_latest_kver=$(echo ${_kernel_tags[-i]} | cut -c2-)" >> $GITHUB_OUTPUT
              break
            fi
          done

      - name: Get Current Kernel Version
        id: get_current_kver
        run: |
          _base_kver=$(cat kernel-cachyos-server.spec | sed -n '13p' | cut -c19-)
          _stable_kver=$(cat kernel-cachyos-server.spec | sed -n '14p' | cut -c21-)

          if [ "${_stable_kver}" == "0" ]; then
            echo "_current_kver=${_base_kver}" >> $GITHUB_OUTPUT
          else
            echo "_current_kver=${_base_kver}.${_stable_kver}" >> $GITHUB_OUTPUT
          fi

      - name: Compare Kernel Versions
        id: compare_kvers
        run: |
          _current_kver=${{ steps.get_current_kver.outputs._current_kver }}
          _latest_kver=${{ steps.get_latest_kver.outputs._latest_kver }}

          if [ "${_current_kver}" == "${_latest_kver}" ]; then
            echo "_match=1" >> $GITHUB_OUTPUT
          else
            echo "_match=0" >> $GITHUB_OUTPUT
          fi

      - name: Replace Kernel Version in specfile
        if: steps.compare_kvers.outputs._match == 0
        run: |
          _kver_split=( "" "" "" )

          _kver=${{ steps.get_latest_kver.outputs._latest_kver }}

          for (( i=0; i<${#_kver}; i++ )); do
            _cur_char="${_kver:$i:1}"

            if [[ "$_cur_char" == "." || "$_cur_char" == "-" ]]; then
              _cur_index=$((_cur_index + 1))
            else
              _kver_split[$_cur_index]+="$_cur_char"
            fi
          done

          _base_kver="${_kver_split[0]}.${_kver_split[1]}"

          if [ -n "${_kver_split[2]}" ]; then
            _sub="${_kver_split[2]}"
          else
            _sub="0"
          fi

          sed -i "s/_basekver .*/_basekver ${_base_kver}/" kernel-cachyos-server.spec
          sed -i "s/_stablekver .*/_stablekver ${_sub}/" kernel-cachyos-server.spec

      - name: Push modified specfile
        if: steps.compare_kvers.outputs._match == 0
        uses: wranders/commit-action@v0
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          message: "Update to latest kernel version"
          files: |
            kernel-cachyos-server.spec

  trigger-copr-build:
    runs-on: ubuntu-latest
    container: fedora:latest

    needs: [check-for-update]
    if: needs.check-for-update.outputs._match == 0

    steps:
      - name: Install copr-cli package
        run: dnf install -y copr-cli

      - name: Trigger COPR Build
        run: |
          mkdir ~/.config
          tee ~/.config/copr > /dev/null <<EOF
          [copr-cli]
          login = ${{ secrets.COPR_LOGIN }}
          username = vncvltvred
          token = ${{ secrets.COPR_TOKEN }}
          copr_url = https://copr.fedorainfracloud.org
          EOF

          copr-cli buildscm --clone-url https://github.com/dangbroitsdon/copr-kernel-cachyos-server --subdir . --spec kernel-cachyos-server.spec --timeout 72000 --nowait vncvltvred/kernel-cachyos-server
